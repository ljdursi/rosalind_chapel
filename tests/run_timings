#!/bin/bash

function timing() {
    local arg1="$1"
    local arg2="$2"
    local arg3="$3"
    local dir="$4"
    local ERRFILE="$5"

    readonly TIMEFILE=./timeres.txt

    pushd "$dir"
    /usr/bin/time -o ./timeres.txt -f '%x %e %M' "$arg1" "$arg2" "$arg3" 2> "./${ERRFILE}" > /dev/null
    IFS=' ' read -ra results < "$TIMEFILE"
    rm "$TIMEFILE"
    if [[ "${results[0]}" == "0" ]]
    then
        2> echo -n "." 
        retval="${results[1]}	${results[2]}"
        rm "./${ERRFILE}"
    else
        2> echo -n "F" 
        retval="0	0"
    fi
    popd
    echo "${retval}"
}

function main() {
    readonly DIRS=$( find . -name timing.in -exec dirname {} \; )
    readonly ERRFILE=err

    echo -n "Timing "
    for dir in $DIRS
    do
        bdir=$( basename "$dir" )
        execname=$( echo "$bdir" | tr "[:upper:]" "[:lower:]" )
        pyname="${execname}.py"

        chapout=$( timing "${execname}" "--infile" timing.in "${dir}" "$ERRFILE" )
        pyout=$( timing "python" "${pyname}" timing.in "${dir}" "$ERRFILE" )
        echo "${bdir}	${chapout}	${pyout}" >> timings_2.txt
    done
    echo ""

    pass=0
    for dir in $DIRS
    do
        if [[ -f "${dir}/${ERRFILE}" ]]
        then
            bdir=$( basename "$dir" )
            2> echo "Timing_${bdir}" 
            2> cat "${dir}/err"
            pass=1
        fi
    done
    exit $pass
}

touch timings_2.txt
main
